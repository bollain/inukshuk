---
swagger: "2.0"
info:
  description: "Documentation for Inukshuk API."
  version: "1.0"
  title: "Inukshuk API"
paths:
  /users:
    post:
      tags:
      - "/users"
      description: "Creates a user based on provided information"
      operationId: "createUser"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "User"
        description: "The user to be created"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        201:
          description: "User Created."
          schema:
            $ref: "#/definitions/user"
        401:
          description: "Bad request"
        422:
          description: "Email already registered"
      x-swagger-router-controller: "Users"
    put:
      tags:
      - "/users"
      description: "Updates an existing `User`"
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "User with updated info"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "User updated"
          schema:
            $ref: "#/definitions/user"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "Users"
  /users/{userId}:
    get:
      tags:
      - "/users"
      description: "Gets `User` with specific ID"
      operationId: "getUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "User with specified ID"
          schema:
            $ref: "#/definitions/user"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "Users"
    delete:
      tags:
      - "/users"
      description: "Delete `User` with given ID"
      operationId: "deleteUser"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "User deleted successfully"
        403:
          description: "Forbidden"
        404:
          description: "User not found"
      x-swagger-router-controller: "Users"
  /users/{userId}/trips:
    get:
      tags:
      - "/users"
      description: "Get all `Trips` for a user"
      operationId: "getUserTrips"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The User for which we want all trips"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/tripsCollection"
        400:
          description: "Invalid User ID"
        404:
          description: "User not found"
      x-swagger-router-controller: "Users"
  /users/{userId}/trips/search:
    get:
      tags:
      - "/users"
      description: "Gets a specific `Trip` associated with a `User`"
      operationId: "searchTrip"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "User ID"
        required: true
        type: "string"
      - name: "tripId"
        in: "query"
        description: "The ID of a trip"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/trip"
        400:
          description: "Invalid User ID"
        404:
          description: "User not found"
      x-swagger-router-controller: "Users"
  /trips:
    post:
      tags:
      - "/trips"
      description: "Create `Trip` for a specific `User`"
      operationId: "createTrip"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Trip"
        description: "Trip Object"
        required: true
        schema:
          $ref: "#/definitions/trip"
      responses:
        201:
          description: "Trip created"
          schema:
            $ref: "#/definitions/trip"
        400:
          description: "Invalid User ID"
      x-swagger-router-controller: "Trips"
    put:
      tags:
      - "/trips"
      description: "Update `Trip` details"
      operationId: "updateTrip"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Trip"
        description: "JSON object with trip details"
        required: true
        schema:
          $ref: "#/definitions/trip"
      responses:
        200:
          description: "Trip updated"
        400:
          description: "Invalid ID"
        404:
          description: "Resource not found"
      x-swagger-router-controller: "Trips"
  /trips/{tripId}:
    get:
      tags:
      - "/trips"
      description: "Gets a trip based on a specific Id"
      operationId: "getTrip"
      parameters:
      - name: "tripId"
        in: "path"
        description: "ID of trip"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/trip"
        400:
          description: "Invalid ID"
        404:
          description: "Resource not found"
      x-swagger-router-controller: "Trips"
    delete:
      tags:
      - "/trips"
      description: "Deletes a  Trip"
      operationId: "deleteTrip"
      parameters:
      - name: "tripId"
        in: "path"
        description: "Id of trip"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Trip deleted successfully"
        403:
          description: "Forbidden"
        404:
          description: "Trip not found"
      x-swagger-router-controller: "Trips"
  /trips/{tripId}/breadcrumbs:
    post:
      tags:
      - "/trips"
      description: "Breadcrumbs for a specific trip. Responds with list of all breadcrumbs\
        \ known by the server."
      operationId: "updateBreadcrumbs"
      parameters:
      - name: "tripId"
        in: "path"
        description: "ID of trip"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "Trip"
        description: "Array of breadcrumbs"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/geoLocation"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/geoLocation"
        400:
          description: "Invalid Trip ID"
        404:
          description: "Resource not found"
      x-swagger-router-controller: "Trips"
definitions:
  user:
    type: "object"
    required:
    - "email"
    - "firstName"
    - "lastName"
    - "phoneNumber"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      phoneNumber:
        type: "string"
      trips:
        type: "array"
        items:
          type: "integer"
  trip:
    type: "object"
    properties:
      tripId:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      tripName:
        type: "string"
      returnTime:
        type: "string"
        format: "date-time"
      contactEmail:
        type: "string"
      contactPhone:
        type: "string"
      startingLocation:
        $ref: "#/definitions/geoLocation"
      endingLocation:
        $ref: "#/definitions/geoLocation"
      breadCrumbs:
        type: "array"
        items:
          $ref: "#/definitions/geoLocation"
      note:
        type: "string"
      completed:
        type: "boolean"
  tripsCollection:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "base64"
      trips:
        type: "array"
        items:
          $ref: "#/definitions/trip"
  geoLocation:
    type: "object"
    required:
    - "latitude"
    - "longitude"
    properties:
      latitude:
        type: "number"
        format: "double"
      longitude:
        type: "number"
        format: "double"
